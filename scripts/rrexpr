#!/usr/bin/perl

if(!(@ARGV[0])) {
  print "Invalid size\n";
  exit;
}


sub clmp {
  (my $c) = @_;
  $c %= 127;
  if($c < 32){
    $c += 32;
  }
  $c
}

sub rstr {
  (my $l) = @_;
  $l = "$l";
  my $str = pack "C*", map { clmp $_ } unpack "C*", `head -c $l /dev/urandom`;
  while($str =~ s/[\[\-+?*\]\{\}\(\)\s|\\wd]/@{[unpack "C", clmp rand]}/g) {}
  $str
}

sub rexpr {
  (my $l) = @_;
  my $n = int(rand 4) + 1;
  my $r = rstr $n;
  my $n = int(rand 6);
  if(0 == $n){ return "$l$r";  } # cat
  if(1 == $n){ return "$l|$r"; } # |
  if(4 <= $n){ return "$l+"; }   # +
  if(2 == $n){ return "$l*"; } # *
  if(3 == $n){ return "$l?"; } # ?
  return $l;
}



$x = rstr 2;
$i=0;
while($i++ < @ARGV[0]){
  $x=rexpr$x;
}

print "$x\n";
